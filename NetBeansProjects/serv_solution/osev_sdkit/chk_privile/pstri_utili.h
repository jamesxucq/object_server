
/* 
 * File:   pstri_utili.h
 * Author: James Xu
 *
 * Created on 2018.3.23, AM 10:14
 */

#ifndef PSTRI_UTILI_H
#define PSTRI_UTILI_H

#ifdef __cplusplus
extern "C" {
#endif

    //

    inline unsigned int creat_pow2n_size(unsigned int size) {
        switch (size) {
            case 0x00 ... 0x01:
                return 0x01;
            case (0x01 + 0x01) ... (0x01 << 0x01):
                return (0x01 << 0x01);
            case ((0x01 << 0x01) + 0x01) ... (0x01 << 0x02):
                return (0x01 << 0x02);
            case ((0x01 << 0x02) + 0x01) ... (0x01 << 0x03):
                return (0x01 << 0x03);
            case ((0x01 << 0x03) + 0x01) ... (0x01 << 0x04):
                return (0x01 << 0x04);
            case ((0x01 << 0x04) + 0x01) ... (0x01 << 0x05):
                return (0x01 << 0x05);
            case ((0x01 << 0x05) + 0x01) ... (0x01 << 0x06):
                return (0x01 << 0x06);
            case ((0x01 << 0x06) + 0x01) ... (0x01 << 0x07):
                return (0x01 << 0x07);
            case ((0x01 << 0x07) + 0x01) ... (0x01 << 0x08):
                return (0x01 << 0x08);
            case ((0x01 << 0x08) + 0x01) ... (0x01 << 0x09):
                return (0x01 << 0x09);
            case ((0x01 << 0x09) + 0x01) ... (0x01 << 0x0A):
                return (0x01 << 0x0A);
            case ((0x01 << 0x0A) + 0x01) ... (0x01 << 0x0B):
                return (0x01 << 0x0B);
            case ((0x01 << 0x0B) + 0x01) ... (0x01 << 0x0C):
                return (0x01 << 0x0C);
            case ((0x01 << 0x0C) + 0x01) ... (0x01 << 0x0D):
                return (0x01 << 0x0D);
            case ((0x01 << 0x0D) + 0x01) ... (0x01 << 0x0E):
                return (0x01 << 0x0E);
            case ((0x01 << 0x0E) + 0x01) ... (0x01 << 0x0F):
                return (0x01 << 0x0F);
            default:
                break;
        }
        //
        return INVA_UINT_VALU;
    }


#ifdef __cplusplus
}
#endif

#endif /* PSTRI_UTILI_H */

